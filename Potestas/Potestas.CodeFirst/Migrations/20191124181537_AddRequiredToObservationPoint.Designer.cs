// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Potestas.CodeFirst;

namespace Potestas.CodeFirst.Migrations
{
    [DbContext(typeof(ObservationsContext))]
    [Migration("20191124181537_AddRequiredToObservationPoint")]
    partial class AddRequiredToObservationPoint
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview3.19554.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Potestas.CodeFirst.Entities.FlashObservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DurationMs")
                        .HasColumnType("int");

                    b.Property<double>("EstimatedValue")
                        .HasColumnType("float");

                    b.Property<double>("Intensity")
                        .HasColumnType("float");

                    b.Property<Point>("ObservationPoint")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<DateTime>("ObservationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FlashObservations");
                });
#pragma warning restore 612, 618
        }
    }
}
